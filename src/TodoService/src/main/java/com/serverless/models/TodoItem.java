package com.serverless.models;

import java.time.LocalDate;
import java.time.ZoneId;
import java.util.Calendar;
import java.util.Date;

import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAttribute;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBAutoGeneratedKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBHashKey;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBIgnore;
import com.amazonaws.services.dynamodbv2.datamodeling.DynamoDBTable;

import lombok.Data;
import lombok.val;

/**
 * Todoアイテムクラス
 */
@Data
@DynamoDBTable(tableName = "TodoItem")
public class TodoItem {

    /**
     * ID
     */
    @DynamoDBHashKey(attributeName = "Id")
    @DynamoDBAutoGeneratedKey
    private String id;

    /**
     * タイトル
     */
    @DynamoDBAttribute(attributeName = "Title")
    private String title;

    /**
     * 内容
     */
    @DynamoDBAttribute(attributeName = "Contents")
    private String Contents;


    /**
     * UnixTime
     */
    @DynamoDBAttribute(attributeName = "Time")
    private long time;

    @DynamoDBIgnore
    public LocalDate getExpiredDate(){
        val calendar = Calendar.getInstance();
        calendar.setTimeInMillis(time);
        val date = calendar.getTime();

        val result = date.toInstant().atZone(ZoneId.systemDefault()).toLocalDate();

        return result;
    }

    @DynamoDBIgnore
    public void setExpiredDate(LocalDate value){
        val date = Date.from(value.atStartOfDay(ZoneId.systemDefault()).toInstant());

        val calendar = Calendar.getInstance();
        calendar.setTime(date);
        time = calendar.getTimeInMillis();
    }
}