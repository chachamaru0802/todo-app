
service: todoservice

provider:
  name: aws
  runtime: java8
  stage: dev
  region: ap-northeast-1
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
        - dynamodb:DeleteItem
        - dynamodb:BatchWriteItem
      Resource: "arn:aws:dynamodb:${opt:region, self:provider.region}:*:table/TodoItem"

package:
  artifact: build/distributions/todo.zip

functions:
  get:
    handler: com.serverless.TodoHandler::get
    events:
     - http:
        path: api/todos/{id}
        method: get
        cros: true
  search:
    handler: com.serverless.TodoHandler::search
    events:
     - http:
        path: api/todos/search/{key}
        method: get
        cros: true

  list:
    handler: com.serverless.TodoHandler::list
    events:
     - http:
        path: api/todos
        method: get
        cros: true
  
  create:
    handler: com.serverless.TodoHandler::create
    events:
     - http:
        path: api/todos
        method: post
        cros: true
  
  update:
    handler: com.serverless.TodoHandler::update
    events:
     - http:
        path: api/todos/{id}
        method: put
        cros: true
  
  delete:
    handler: com.serverless.TodoHandler::delete
    events:
     - http:
        path: api/todos/{id}
        method: delete
        cros: true

resources:
  Resources:
    TodosDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: id
            AttributeType: S
        KeySchema:
          -
            AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        TableName: TodoItem

        